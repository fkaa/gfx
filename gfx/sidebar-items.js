initSidebarItems({"constant":[["RENDER_TARGET","The resource can be rendered into."],["SHADER_RESOURCE","The resource can be bound to the shader for reading."],["UNORDERED_ACCESS","The resource can be bound to the shader for writing."]],"enum":[["BufferRole","Role of the memory buffer. GLES doesn't chaning bind points for buffers."],["BufferUsage","A hint as to how this buffer will be used."],["PipelineStateError","Error creating a PipelineState"],["Primitive","Describes what geometric primitives are created from vertex data."],["ShaderSet","A complete set of shaders to link a program."],["SliceKind","Source of vertex ordering for a slice"],["UniformValue","A value that can be uploaded to the device as a uniform."],["UpdateError","An error occuring in buffer/texture updates."]],"fn":[["cast_slice","Cast a slice from one POD type to another."]],"macro":[["gfx_constant_struct!",""],["gfx_format!",""],["gfx_pipeline!",""],["gfx_pipeline_base!",""],["gfx_pipeline_inner!",""],["gfx_vertex_struct!",""]],"mod":[["core",""],["format","Universal format specification. Applicable to textures, views, and vertex buffers."],["handle","Device resource handles"],["macros","Convenience macros Various helper macros."],["preset","State presets"],["pso","Pipeline states Pipeline State Objects - typed higher-level version."],["shade","Shaders Shader parameter handling."],["state","Fixed-function hardware state."],["tex","Texture creation and modification."],["traits","public re-exported traits"]],"struct":[["BufferInfo","An information block that is immutable and associated with each buffer"],["DomainShader",""],["Encoder","Graphics commands encoder."],["GeometryShader",""],["HullShader",""],["PixelShader",""],["ProgramInfo","Metadata about a program."],["Slice","Description of a subset of `Mesh` data to render."],["SubmitInfo","All the data needed simultaneously for submitting a command buffer for execution on a device."],["VertexShader",""]],"trait":[["CommandBuffer","An interface of the abstract command buffer. It collects commands in an efficient API-specific manner, to be ready for execution on the device."],["Device","An interface for performing draw calls using a specific graphics API"],["Factory",""],["Resources","Resources pertaining to a specific API."],["ToIndexSlice","A helper trait to build index slices from data."]],"type":[["InstanceCount",""],["InstanceOption",""],["VertexCount",""]]});